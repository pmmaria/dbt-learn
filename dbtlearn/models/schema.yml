version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    
    columns:
      - name: listing_id
        description: Primary key for the listing.
        tests:
          - unique
          - not_null
      
      - name: host_id
        description: The host's id. Reference the host table.
        tests: 
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id

      - name: room_type
        description: Type of apartment / room.
        tests:
          - accepted_values:
              values: ['Entire home/apt', 'Private room', 'Shared room', 'Hotel room']

      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
        tests:
          - positive_value

  - name: dim_hosts_cleansed
    description: Cleansed table which contains Airbnb hosts.
    columns:
      - name: host_id
        description: Primary key for the host.
        tests:
          - not_null
          - unique
      
      - name: host_name
        description: Host's name.
        tests:
          - not_null
      
      - name: is_superhost
        description: Defines if the host is super host or not. True/False values.
        tests:
          - accepted_values:
              values: ['t', 'f']

  - name: dim_listings_w_hosts
    tests: 
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: .99
              min_value: 50 # (Optional)
              max_value: 500 # (Optional)
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn #give back a warning instead of an error if it doesn't pass the test

  - name: fct_reviews
    description: Fact table which contains the reviews that the guests give to the place they have stayed.
    columns:
      - name: listing_id
        description: Foreign key. Corresponds to the dim_listings_cleansed
        tests:
          - relationships:
              to: ref('dim_listings_cleansed')
              field: listing_id

      - name: reviewer_name
        description: Name of the person who writes the review.
        tests:
          - not_null
      
      - name: review_sentiment
        description: indicates the overall review sentiment, which can be positive, neutral or negative
        tests:
          - accepted_values:
              values: ['positive', 'neutral', 'negative']